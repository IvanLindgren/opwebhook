# frontend.py
import telebot
from telebot import types
from bot import bot  # –∏–º–ø–æ—Ä—Ç –±–æ—Ç–∞ –∏–∑ bot.py
from Backend import add_user, remove_user  # –∏–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥ /start –∏ /hello
@bot.message_handler(commands=['start', 'hello'])
def main(message):
    bot.send_message(
        message.chat.id,
        f'–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –Ø ‚ú® <b>OpenProject Bot</b>‚ú®, –∏ —è –∑–¥–µ—Å—å –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Ç–µ–±–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è!',
        parse_mode='HTML'
    )
    settings(message)

def settings(message):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    markup = types.InlineKeyboardMarkup()
    btn_stop = types.InlineKeyboardButton('üö´ –í—ã–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', callback_data='stop')
    btn_not = types.InlineKeyboardButton('‚úÖ –í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', callback_data='all')
    markup.row(btn_not)
    markup.row(btn_stop)
    bot.send_message(message.chat.id, '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π', parse_mode='HTML', reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è callback 'all' (–≤–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è)
@bot.callback_query_handler(func=lambda callback: callback.data == 'all')
def all(callback):
    chat_id = callback.message.chat.id
    add_user(chat_id, 'all')  # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö

    markup = types.InlineKeyboardMarkup()
    btn_back = types.InlineKeyboardButton('üîô –ù–∞–∑–∞–¥', callback_data='back')
    markup.row(btn_back)
    bot.send_message(
        callback.message.chat.id,
        '‚òëÔ∏è –í–∞–º –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å <b>–≤—Å–µ</b> —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è!',
        parse_mode='HTML',
        reply_markup=markup
    )
    bot.answer_callback_query(callback.id, text='–í–∞–º –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –≤—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è!')
    bot.delete_message(callback.message.chat.id, callback.message.message_id)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è callback 'stop' (–æ—Ç–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è)
@bot.callback_query_handler(func=lambda callback: callback.data == 'stop')
def stop(callback):
    chat_id = callback.message.chat.id
    remove_user(chat_id)  # –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö

    markup = types.InlineKeyboardMarkup()
    btn_back = types.InlineKeyboardButton('üîô –ù–∞–∑–∞–¥', callback_data='back')
    markup.row(btn_back)
    bot.send_message(
        callback.message.chat.id,
        '–í–∞–º –±–æ–ª—å—à–µ –Ω–µ –±—É–¥—É—Ç –ø—Ä–∏—Å—ã–ª–∞—Ç—å—Å—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è!',
        parse_mode='HTML',
        reply_markup=markup
    )
    bot.answer_callback_query(callback.id, text='–í–∞–º –±–æ–ª—å—à–µ –Ω–µ –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è!')
    bot.delete_message(callback.message.chat.id, callback.message.message_id)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è callback 'back'
@bot.callback_query_handler(func=lambda callback: callback.data == 'back')
def back(callback):
    bot.delete_message(callback.message.chat.id, callback.message.message_id)
    settings(callback.message)
